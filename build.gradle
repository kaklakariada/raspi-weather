plugins {
    id 'java'
    id "com.github.johnrengelman.shadow" version "2.0.2"
    id 'org.hidetake.ssh' version '2.9.0'
}

repositories {
    jcenter()
}

version = '0.0.1'
sourceCompatibility = 1.8
targetCompatibility = 1.8

jar {
    manifest {
        attributes 'Main-Class': 'weather.WeatherStation'
    }
}

tasks.withType(JavaCompile) {
	options.compilerArgs << '-Xlint:all'
	options.encoding = 'UTF-8'
}

dependencies {
    compile 'com.pi4j:pi4j-core:1.1'
    compile 'com.github.kaklakariada:fritzbox-java-api:0.4.1'
    compile 'org.slf4j:slf4j-api:1.7.22'
    compile 'ch.qos.logback:logback-classic:1.1.8'

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.1.0'
}

remotes {
  raspi {
    host = 'raspitouch'
    user = 'pi'
    identity = file("${System.getProperty('user.home')}/.ssh/id_rsa")
  }
}

task deploy(dependsOn: shadowJar) {
  doLast {
    ssh.run {
      session(remotes.raspi) {
        def file = shadowJar.outputs.files.singleFile
        put from: file, into: '/home/pi'
        def result = execute "java -jar /home/pi/${file.name}"
        logger.info result
      }
    }
  }
}

